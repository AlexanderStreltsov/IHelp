{"version":3,"file":"static/css/stories-filter-stories.123db424.chunk.css","mappings":"AAGA;AGAA;ACAA","sources":["webpack://ihelp/./src/common/_selectors.scss","webpack://ihelp/./src/scss/mixins/_text.scss","webpack://ihelp/./src/components/filters/filter.module.scss","webpack://ihelp/./src/ui/popup/popup.module.scss","webpack://ihelp/./src/ui/checkbox/checkbox.module.scss"],"sourcesContent":["@import '../scss/mixins/text';\n\n// селекторы текстов\n.text-big {\n  @include text(24px, 400, 29px);\n}\n\n.text-medium {\n  @include text(16px, 400, 19px);\n}\n\n.text-medium-bold {\n  @extend .text-medium;\n  font-weight: 700;\n}\n\n.text-small {\n  @include text(12px, 400, 14px);\n}\n\n.text-small-bold {\n  @extend .text-small;\n  font-weight: 700;\n}\n\n.text-error-message {\n  @include text(13px, 400, 16px);\n}\n\n.page-container {\n  display: flex;\n  gap: 20px;\n  position: relative;\n\n  @media screen and (max-width: 720px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 0;\n  }\n}\n\n.page-content {\n  flex-grow: 1;\n\n  @media screen and (max-width: 720px) {\n    width: 100%;\n    max-width: 378px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n.catalog {\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin-top: 34px;\n  box-sizing: border-box;\n  padding: 0 30px 30px 30px;\n\n  @media screen and (max-width: 720px) {\n    padding: 0 0 30px;\n    row-gap: 14px;\n  }\n}\n\n.catalog-column {\n  @media screen and (max-width: 720px) {\n    flex-direction: column;\n    align-items: center;\n  }\n}\n","@mixin text($size, $weight, $lineHeight) {\n  font: {\n    family: 'GolosText';\n    style: normal;\n    size: $size;\n    weight: $weight;\n  }\n  line-height: $lineHeight;\n}\n","@import '../../common/variable';\n@import '../../common/selectors';\n\n.popup {\n  padding: 0 32px 34px 30px;\n  @media screen and (max-width: 413px) {\n    padding: 0 27px 34px;\n  }\n}\n\n.form {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  .buttonAply span {\n    @extend .text-small;\n  }\n}\n\n.fieldset {\n  margin: 0;\n  padding: 0;\n  border: none;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  justify-content: flex-start;\n  width: 100%;\n}\n\n.fieldset:last-of-type {\n  margin-bottom: 8px;\n}\n\n.fieldsetActiveApplications {\n  margin-bottom: 14px;\n}\n\n.fildsetCategory {\n  @media screen and (max-width: 768px) {\n    justify-content: space-between;\n  }\n}\n\n.fieldsetTideData {\n  .legend {\n    margin-bottom: 20px;\n  }\n}\n\n.fildsetShow {\n  flex-direction: column;\n}\n\n.fildsetShow:last-of-type {\n  min-height: 203px;\n}\n\n.fildsetUsers {\n  flex-direction: column;\n}\n\n.legend {\n  display: block;\n  width: 100%;\n  color: map-get($text_color, common);\n  padding: 20px 0 4px;\n  border-bottom: 1px solid map-get($background_color, colorBorder);\n}\n\n.checkboxCategory {\n  margin: 12px 25px 0 0;\n  width: 107px;\n  @media screen and (max-width: 768px) {\n    margin-right: 0;\n  }\n}\n\n.checkboxCategoryRecipient:last-of-type {\n  margin-bottom: 17px;\n}\n\n.checkboxShow {\n  margin-top: 12px;\n}\n\n.checkboxRadius {\n  margin: 12px 9px 0 0;\n}\n\n.checkboxRadiusActiveApplicationsVolunteer {\n  margin-bottom: 7px;\n}\n\n.checkboxUsers {\n  margin-top: 12px;\n}\n\n.checkboxUsers:last-of-type {\n  margin-bottom: 36px;\n}\n","@use 'sass:map';\n@import '../../common/variable';\n\n.popup {\n  width: 100%;\n  box-sizing: border-box;\n  background-color: map.get($background_color, popup);\n  position: relative;\n  z-index: 100;\n}\n\n.shadow {\n  box-shadow: 0 0 4px map.get($background_color, popupShadow),\n    0 4px 32px map.get($background_color, popupShadowSecondary);\n}\n\n.width_type_small {\n  max-width: 300px;\n  @media screen and (max-width: 413px) {\n    max-width: 260px;\n  }\n}\n\n.width_type_middle {\n  max-width: 370px;\n  @media screen and (max-width: 768px) {\n    max-width: 300px;\n  }\n  @media screen and (max-width: 413px) {\n    max-width: 280px;\n  }\n}\n\n.width_type_big {\n  max-width: 586px;\n  @media screen and (max-width: 768px) {\n    max-width: 343px;\n  }\n  @media screen and (max-width: 413px) {\n    max-width: 280px;\n  }\n}\n\n@mixin arrow($place) {\n  content: '';\n  display: block;\n  width: 0;\n  height: 0;\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  border-bottom: 9px solid map.get($background_color, popup);\n  position: absolute;\n  right: $place;\n  top: -9px;\n}\n\n.arrow_type_right::before {\n  @include arrow(14px);\n}\n\n.arrow_type_center::before {\n  @include arrow(14px);\n  right: calc(50% - 10px);\n}\n\n.corners_raduis {\n  border-radius: 10px;\n}\n","@use 'sass:map';\n@import '../../common/variable';\n\n.input {\n  margin: 0;\n  position: absolute;\n  width: 0;\n  height: 0;\n  overflow: hidden;\n  clip-path: inset(0 0 0 0);\n  visibility: hidden;\n}\n\n.label {\n  display: inline-flex;\n  align-items: center;\n  color: map.get($text_color, common);\n  &:hover {\n    cursor: pointer;\n  }\n}\n\n.fakeChekbox {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  width: 20px;\n  height: 20px;\n  border: 2px solid map.get($background_color, inactiveSecondary);\n  border-radius: 4px;\n}\n\n// в случае, если есть ярлык, который справа, включается правый margin\n.fakeChekboxWithLabel {\n  margin-right: 14px;\n}\n\n.checkmark {\n  display: inline;\n  visibility: hidden;\n}\n\n.input:checked + .fakeChekbox {\n  border: none;\n  background-color: map.get($background_color, partsPrimary);\n}\n\n.input:checked + .fakeChekbox .checkmark {\n  visibility: visible;\n}\n\n.fakeButton {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  width: 66px;\n  height: 24px;\n  border: 1px solid map.get($background_color, partsPrimary);\n  color: map.get($text_color, primary);\n}\n\n.input:checked + .fakeButton {\n  background-color: map.get($background_color, partsPrimary);\n  color: map.get($text_color, additional);\n}\n"],"names":[],"sourceRoot":""}